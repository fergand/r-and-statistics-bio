{
  "hash": "b52310e41cd437920d39e422650c507d",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n\n\n# Tidyverse\n\nO `tidyverse` [@wickhamWelcomeTidyverse2019] é um conjunto de pacotes R que reúne as tarefas centrais de qualquer projeto de ciência de dados: importação, organização, manipulação, visualização e programação. Seu principal objetivo é criar uma sintaxe consistente e legível, facilitando a comunicação entre quem escreve o código e quem o executa. Note-se que, embora o tidyverse cubra grande parte do fluxo de trabalho, ele não inclui ferramentas específicas de modelagem estatística.\n\nPara facilitar essa integração, o `tidyverse` utiliza intensamente do operador pipe (`%>%`), que passa o resultado de uma etapa diretamente para a próxima, evitando aninhamentos confusos. Ao carregar o pacote, diversos módulos são automaticamente disponibilizados:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\n```text\n-- Attaching core tidyverse packages ------ tidyverse 2.0.0 --\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n-- Conflicts ------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (http://conflicted.r-lib.org/) \n  to force all conflicts to become errors\n```\n\\noindent Entre os principais estão:\n\n- `ggplot2` (visualização de dados);\n- `dplyr` (manipulação de dados);\n- `tidyr` (formatação \"*long*\"/\"*wide*\");\n- `readr` (leitura eficiente de arquivos de texto);\n- `tibble` (versão moderna do `data.frame`);\n- `purrr` (programação funcional);\n- `stringr`, `forcats` e outros.\n\nComo dito, muitos pacotes definem funções com nomes idênticos, sendo comum que o console exiba nomes como:\n```\nThe following objects are masked from ‘package:stats’:\n    filter, lag\n```\n\nUm pilar do `tidyverse` é a adoção do princípio `tidy` [@wickhamTidyData2014], em que:\n\n- Cada variável ocupa uma coluna;\n- Cada observação ocupa uma linha;\n- Cada tipo de entidade observacional fica em sua própria tabela.\n\nNesse contexto, a **entidade observacional** é o conceito central que define o que uma linha representa. Pode ser um paciente em um estudo clínico, um país em dados econômicos ou, como nos exemplos a seguir: \n\n- **Aves**: Cada linha corresponde a uma única ave, registrando suas características (peso, envergadura, espécie, etc.).\n- **Plantas**: Cada linha representa um vaso de planta em um experimento (altura, número de folhas, tipo de solo, etc.).\n\nA estrutura de dados que implementa essa filosofia no `tidyverse` é o `tibble`. Ele é a versão moderna do `data.frame`, projetado para ser mais prático e informativo, exibindo resumos concisos dos dados e fornecendo diagnósticos mais úteis.\n\nUma vez apresentada a filosofia e a estrutura de dados do `tidyverse`, o foco se volta para a aplicação prática. A seguir, a concentração do material residirá nos dois pacotes centrais do `tidyverse`: o `dplyr`, para manipulação de dados, e o `ggplot2`, para a criação de gráficos. \n\n\n## A Gramática da Manipulação de Dados: `dplyr`\n\nO `dplyr` é um pacote pertencente ao `tidyverse`, que fornece uma ferramentas robustas para manipulação de dados. Os comandos oferecidos soam um tanto quanto intuitivos, correspondendo ações comuns na área de análise de dados. Para explorar as principais funções será utilizado o *dataset* `penguins`, focando em processos de filtragem, organização, transformação e resumos dos dados, possibilitando possíveis perguntais básicas sobre a biologia e ecologia dos pinguins. \n\nO primeiro passo a ser feito é instalar a biblioteca `palmerpenguins` e, em seguida, carregá-la no ambiente de trabalho, para que possamos realizar uma inspeção inicial na estrutura dos dados.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"palmerpenguins\") # Realizar apenas uma única vez\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\n```\n:::\n\n\n\n\n\\noindent Para carregarmos os dados sobre pinguins no ambiente de trabalho, podemos utilizar a função `data()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"penguins\", package = \"palmerpenguins\")\n```\n:::\n\n\n\n\nPodemos observar que no painel **Environment** do RStudio, aparece o objeto `penguins`, isso significa que o conjunto de dados está carregado no ambiente de trabalho e podemos dar início nas inspeções. O primeiro comando que será visto é o `glimpse()`. Ele exibe, de maneira prática e rápida, a estrutura do *dataset* como: dimensão (número de linhas e colunas), o nome de cada coluna, o tipo de dado de cada coluna e as primeiras observações. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel~\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse~\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, ~\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, ~\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186~\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, ~\n$ sex               <fct> male, female, female, NA, female, male, female, male~\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n```\n\n\n:::\n:::\n\n\n\n\nA saída deste comando revela que existem 344 observações e 8 variáveis, sendo elas `species`, `island`, `bill_length_mm`, `flipper_length_mm`, `body_mass_g`, `sex` e `year`, com seus respectivos tipos, como `factor` para `species` e `numeric`para `bill_length_mn`. Além disso, é possível observar dados ausentes em algumas variáveis, representados por `NA`. Em geral, nos *datasets* disponíveis em pacotes R, é possível utilizar o comando `help(penguins)` para buscar informações sobre o conjunto de dados que será trabalhado. \n\nExecutando o comando de ajuda, são obtidas as seguintes informações sobre as variáveis:\n\n- `species`: um fator que denota a espécie do pinguim (Adélie, Chinstrap ou Gentoo).\n- `island`: um fator que denota ilhas no Arquipélago Palmer na Antártica (Biscoe, Dream ou Torgersen).\n- `bill_length_mm`: um número que representa o comprimento do bico (em milímetros).\n- `bill_depth_mm`: um número que representa a profundidade do bico (em milímetros).\n- `flipper_length_mm`: um número inteiro que representa o comprimento da nadadeira (em milímetros).\n- `body_mass_g`: um número inteiro que representa a massa do animal (em gramas).\n- `sex`: um fator que representa o sexo do animal (feminino ou masculino).\n- `year`: um número inteiro que denota o ano de estudo (2007, 2008 ou 2009).\n\nAdicionalmente, também é informado que os dados foram originalmente publicados no estudo de @gormanEcologicalSexualDimorphism2014 e que essa pesquisa fez parte do programa *Palmer Station Long-Term Ecological Research* (LTER). Isso significa que o conjunto de dados que está sendo utilizado possui uma origem científica real, ligada a questões sobre como o ambiente e as diferenças entre sexos afetam a vida dessas aves.\n\nA segunda função que será vista é o `select()`. Frequentemente, um conjunto de dados contém mais informações do que o necessário para uma análise específica. Com isso em mente, a função `select()` permite-nos selecionar colunas de interesse. Em geral, os argumentos são os nomes das colunas.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  select(species, island, sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 3\n   species island    sex   \n   <fct>   <fct>     <fct> \n 1 Adelie  Torgersen male  \n 2 Adelie  Torgersen female\n 3 Adelie  Torgersen female\n 4 Adelie  Torgersen <NA>  \n 5 Adelie  Torgersen female\n 6 Adelie  Torgersen male  \n 7 Adelie  Torgersen female\n 8 Adelie  Torgersen male  \n 9 Adelie  Torgersen <NA>  \n10 Adelie  Torgersen <NA>  \n# i 334 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\\noindent O `dplyr` também oferece \"seletores auxiliares\" que tornam a seleção mais poderosa e flexível. Por exemplo, na ocasião de queremos todas as medidas biométricas contidas no *dataset* que terminam com `_mm`, é possível usar a função-argumento `ends_with()` dentro de `select()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  select(\n    body_mass_g, ends_with(\"_mm\")\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 4\n   body_mass_g bill_length_mm bill_depth_mm flipper_length_mm\n         <int>          <dbl>         <dbl>             <int>\n 1        3750           39.1          18.7               181\n 2        3800           39.5          17.4               186\n 3        3250           40.3          18                 195\n 4          NA           NA            NA                  NA\n 5        3450           36.7          19.3               193\n 6        3650           39.3          20.6               190\n 7        3625           38.9          17.8               181\n 8        4675           39.2          19.6               195\n 9        3475           34.1          18.1               193\n10        4250           42            20.2               190\n# i 334 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\\noindent Outros seletores úteis incluem `starts_with()` e `contains()`. Para remover colunas, utiliza-se o sinal de menos (`-`). Por exemplo, deseja-se remover as colunas `ano` e `island`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  select(-year, -island)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 6\n   species bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex   \n   <fct>            <dbl>         <dbl>             <int>       <int> <fct> \n 1 Adelie            39.1          18.7               181        3750 male  \n 2 Adelie            39.5          17.4               186        3800 female\n 3 Adelie            40.3          18                 195        3250 female\n 4 Adelie            NA            NA                  NA          NA <NA>  \n 5 Adelie            36.7          19.3               193        3450 female\n 6 Adelie            39.3          20.6               190        3650 male  \n 7 Adelie            38.9          17.8               181        3625 female\n 8 Adelie            39.2          19.6               195        4675 male  \n 9 Adelie            34.1          18.1               193        3475 <NA>  \n10 Adelie            42            20.2               190        4250 <NA>  \n# i 334 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\nAntes prosseguirmos para a próxima função, vale destacar que o conjunto de dados `penguins` é um objeto `tibble` dentro do R e, portanto, por mais que existam 344 observações, o `tibble` enxuga a visualização para somente 10, além de indicar quantas linhas ainda existem. \n\nA terceira função é o `filter()`. Enquanto `select()` trabalha nas colunas, o `filter()` trabalha nas linhas, permitindo-nos manter apenas as observações que satisfazem certas condições. É aqui que é possível responder perguntas investigadas com relação aos dados. Por exemplo, para encontrar todos os pinguins da espécie Adelie que vivem na ilha Torgersen:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  filter(\n      species == \"Adelie\", island == \"Torgersen\"\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 52 x 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# i 42 more rows\n# i 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\nNeste exemplo, as condições separadas por vírgula são unidas por um \"E\" lógico. Também é possível utilizar o \"OU\" lógico para determinar  pinguins mais pesados (acima de 6000g) ou com bicos muito longos (mais de 55mm) através do conectivo `|`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  filter(\n    body_mass_g > 6000 | bill_length_mm > 55\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 x 8\n  species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>     <fct>           <dbl>         <dbl>             <int>       <int>\n1 Gentoo    Biscoe           49.2          15.2               221        6300\n2 Gentoo    Biscoe           59.6          17                 230        6050\n3 Gentoo    Biscoe           55.9          17                 228        5600\n4 Gentoo    Biscoe           55.1          16                 230        5850\n5 Chinstrap Dream            58            17.8               181        3700\n6 Chinstrap Dream            55.8          19.8               207        4000\n# i 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n\nO `filter()` também permite encontrar valores ausentes (`NA`s) em conjunto da função `is.na()`. Por exemplo, deseja-se verificar quais pinguins não tiveram seu sexo registrado:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  filter(is.na(sex))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 11 x 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           NA            NA                  NA          NA\n 2 Adelie  Torgersen           34.1          18.1               193        3475\n 3 Adelie  Torgersen           42            20.2               190        4250\n 4 Adelie  Torgersen           37.8          17.1               186        3300\n 5 Adelie  Torgersen           37.8          17.3               180        3700\n 6 Adelie  Dream               37.5          18.9               179        2975\n 7 Gentoo  Biscoe              44.5          14.3               216        4100\n 8 Gentoo  Biscoe              46.2          14.4               214        4650\n 9 Gentoo  Biscoe              47.3          13.8               216        4725\n10 Gentoo  Biscoe              44.5          15.7               217        4875\n11 Gentoo  Biscoe              NA            NA                  NA          NA\n# i 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n\nA interpretação do `NA` é relativa ao contexto dos dados. No caso das observações sobre os pinguins, os valores ausentes na variável `sex` permite identificar pinguins que não tiveram o sexo avaliado, tornando um provável erro frustrante de coleta de dados para um objeto de investigação. O pacote `tidyr`, também do `tidyverse`, oferece a função `drop_na()`, que remove quaisquer linhas que contenham `NA`s, permitindo a criação de um *dataset* auxiliar:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_completos <- penguins %>% \n  drop_na()\n```\n:::\n\n\n\n\n\nA quarta função que será apresentada é `arrange()`, que permite reordenar as linhas do dataframe com base nos valores de uma ou mais colunas. Isso é útil para encontrar extremos ou simplesmente para organizar a saída de uma forma mais lógica. Para encontrar os pinguins mais leves, ordenamos pela massa corporal em ordem crescente (o padrão):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  arrange(body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 8\n   species   island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>     <fct>             <dbl>         <dbl>             <int>       <int>\n 1 Chinstrap Dream              46.9          16.6               192        2700\n 2 Adelie    Biscoe             36.5          16.6               181        2850\n 3 Adelie    Biscoe             36.4          17.1               184        2850\n 4 Adelie    Biscoe             34.5          18.1               187        2900\n 5 Adelie    Dream              33.1          16.1               178        2900\n 6 Adelie    Torgers~           38.6          17                 188        2900\n 7 Chinstrap Dream              43.2          16.6               187        2900\n 8 Adelie    Biscoe             37.9          18.6               193        2925\n 9 Adelie    Dream              37.5          18.9               179        2975\n10 Adelie    Dream              37            16.9               185        3000\n# i 334 more rows\n# i 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n\\noindent Para determinar os mais pesados, utiliza-se a função auxiliar `desc()` para ordenar em ordem decrescente:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  arrange(desc(body_mass_g))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Gentoo  Biscoe           49.2          15.2               221        6300\n 2 Gentoo  Biscoe           59.6          17                 230        6050\n 3 Gentoo  Biscoe           51.1          16.3               220        6000\n 4 Gentoo  Biscoe           48.8          16.2               222        6000\n 5 Gentoo  Biscoe           45.2          16.4               223        5950\n 6 Gentoo  Biscoe           49.8          15.9               229        5950\n 7 Gentoo  Biscoe           48.4          14.6               213        5850\n 8 Gentoo  Biscoe           49.3          15.7               217        5850\n 9 Gentoo  Biscoe           55.1          16                 230        5850\n10 Gentoo  Biscoe           49.5          16.2               229        5800\n# i 334 more rows\n# i 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n\\noindent Também é possível ordenar múltiplas colunas. Por exemplo, para encontrar o pinguim mais pesado dentro de cada espécie:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  arrange(\n    species, # Primeiro por espécie\n    desc(body_mass_g) # Depois por massa decrescente\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Biscoe              43.2          19                 197        4775\n 2 Adelie  Biscoe              41            20                 203        4725\n 3 Adelie  Torgersen           42.9          17.6               196        4700\n 4 Adelie  Torgersen           39.2          19.6               195        4675\n 5 Adelie  Dream               39.8          19.1               184        4650\n 6 Adelie  Dream               39.6          18.8               190        4600\n 7 Adelie  Biscoe              45.6          20.3               191        4600\n 8 Adelie  Torgersen           42.5          20.7               197        4500\n 9 Adelie  Dream               37.5          18.5               199        4475\n10 Adelie  Torgersen           41.8          19.4               198        4450\n# i 334 more rows\n# i 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n\n\n\nA quinta função e, com certeza, uma das mais funcionais é a `mutate()`. Ela permite criar novas colunas (variáveis) que são funções de colunas já existentes, sem modificar as originais. Por exemplo, suponha que desejamos mostrar somente as espécies e massas de pinguins em quilogramas (kg):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  mutate(body_mass_kg = body_mass_g/1000) %>% \n  select(species, body_mass_kg)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 2\n   species body_mass_kg\n   <fct>          <dbl>\n 1 Adelie          3.75\n 2 Adelie          3.8 \n 3 Adelie          3.25\n 4 Adelie         NA   \n 5 Adelie          3.45\n 6 Adelie          3.65\n 7 Adelie          3.62\n 8 Adelie          4.68\n 9 Adelie          3.48\n10 Adelie          4.25\n# i 334 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\\noindent Podemos usar `mutate()` para criar categorias. A função `case_when()` é extremamente útil para auxiliar nessa atividade, pois permite definir uma série de condições. Suponha que desejamos criar uma categoria de tamanho baseada na massa corporal:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  mutate(\n    size_category = case_when(\n      body_mass_g > 4750 ~ \"Grande\",\n      body_mass_g < 3500 ~ \"Pequeno\",\n      TRUE ~ \"Médio\"\n    )\n  ) %>% \n  select(\n    species, body_mass_g, size_category\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 x 3\n   species body_mass_g size_category\n   <fct>         <int> <chr>        \n 1 Adelie         3750 Médio        \n 2 Adelie         3800 Médio        \n 3 Adelie         3250 Pequeno      \n 4 Adelie           NA Médio        \n 5 Adelie         3450 Pequeno      \n 6 Adelie         3650 Médio        \n 7 Adelie         3625 Médio        \n 8 Adelie         4675 Médio        \n 9 Adelie         3475 Pequeno      \n10 Adelie         4250 Médio        \n# i 334 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\nAs funções `group_by()` e `summarise()` formam uma dupla formidável para agrupar e resumir os dados, pertencendo ao coração da análise de dados. O `summarise()` colapse o *data frame* em uma única linha de resumo estatísticos, enquanto `group_by()` muda o escopo da análise, fazendo com que as operações subsequentes sejam realizadas por grupo.\n\nInicialmente, vamos utilizar o `summarise()` no *dataset* completo para obter estatísticas globais. Não obstante, é bom frisar a utilização do argumento `na.rm = TRUE` para instruir a remoção dos valores `NA`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  summarise(\n    massa_media = mean(body_mass_g, na.rm = TRUE),\n    nadadeira_max = max(flipper_length_mm, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 x 2\n  massa_media nadadeira_max\n        <dbl>         <int>\n1       4202.           231\n```\n\n\n:::\n:::\n\n\n\n\nNo entanto, essas métricas não fornecem informações com relação as espécies de pinguins. Para resolver isso e possibilitar que mais perguntas sejam respondidas, a função `group_by()` permite que o R faça operações em subconjuntos. Por exemplo, suponha que desejamos determinar qual é a massa corporal por espécie:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% \n  group_by(species) %>% \n  summarise(\n    massa_media_g = mean(body_mass_g, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 x 2\n  species   massa_media_g\n  <fct>             <dbl>\n1 Adelie            3701.\n2 Chinstrap         3733.\n3 Gentoo            5076.\n```\n\n\n:::\n:::\n\n\n\n\n\\noindent Podemos fazer agrupamentos por múltiplas variáveis para investigações mais profundas. Por exemplo, considere que um pesquisador deseja explorar o dimorfismo sexual. Para isso, estatísticas por espécie e sexo serão calculadas. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntabela_resumo <- penguins %>% \n  drop_na(sex) %>% \n  group_by(species, sex) %>% \n  summarise(\n    contagem = n(),\n    massa_media_g = mean(body_mass_g),\n    massa_dp_g = sd(body_mass_g),\n    comp_bico_medio_mm = mean(bill_length_mm),\n    .groups = \"drop\"\n  )\ntabela_resumo\n```\n:::\n\n::: {#tbl-tabela-resumo1 .cell tbl-cap='Estatísticas descritivas de características biométricas de pinguins, agrupadas por espécie e sexo.' tbl-pos='H'}\n::: {.cell-output-display}\n\\begin{table}\n\\centering\n\\resizebox{\\ifdim\\width>\\linewidth\\linewidth\\else\\width\\fi}{!}{\n\\begin{tabular}{llcccc}\n\\toprule\nEspécies & Sexo & Contagem & Massa média (g) & Massa Desvio-padrão (g) & Comprimento médio do bico (mm)\\\\\n\\midrule\n\\cellcolor{gray!10}{Adelie} & \\cellcolor{gray!10}{female} & \\cellcolor{gray!10}{73} & \\cellcolor{gray!10}{3368.84} & \\cellcolor{gray!10}{269.38} & \\cellcolor{gray!10}{37.26}\\\\\nAdelie & male & 73 & 4043.49 & 346.81 & 40.39\\\\\n\\cellcolor{gray!10}{Chinstrap} & \\cellcolor{gray!10}{female} & \\cellcolor{gray!10}{34} & \\cellcolor{gray!10}{3527.21} & \\cellcolor{gray!10}{285.33} & \\cellcolor{gray!10}{46.57}\\\\\nChinstrap & male & 34 & 3938.97 & 362.14 & 51.09\\\\\n\\cellcolor{gray!10}{Gentoo} & \\cellcolor{gray!10}{female} & \\cellcolor{gray!10}{58} & \\cellcolor{gray!10}{4679.74} & \\cellcolor{gray!10}{281.58} & \\cellcolor{gray!10}{45.56}\\\\\n\\addlinespace\nGentoo & male & 61 & 5484.84 & 313.16 & 49.47\\\\\n\\bottomrule\n\\end{tabular}}\n\\end{table}\n\n\n:::\n:::\n\n\n\n\n\\noindent Vale reforçar que a @tbl-tabela-resumo1 foi gerada usando o `dplyr`, com as funções auxiliares `n()` para realizar a contagem de observações em cada grupo e `drop_na(sex)` para remover as observações onde o sexo é desconhecido, permitindo avaliar dimorfismo sexual em todas as três espécies, especialmente na massa corporal. O grande potencial dessa tabela é obter respostas como:\n\n- Os pinguins Gentoo são, em média, os mais pesados.\n- Dentro de cada espécie, os machos são consistentemente mais pesados e têm bicos mais longo que as fêmeas.\n\n\\noindent Permitindo conclusões de hipóteses biológicas. \n\nPor fim, a última função que será abordada é a `recode()`. Muitas vezes, os nomes das categorias nos conjuntos de dados não ideais para a análise ou apresentação em gráficos. Podem ser longos demais, estarem em outro idioma ou simplesmente não serem claros. Para isso, a função `recode()` permite renomear valores de uma variável categórica de forma simples e direta. Por exemplo, suponha que desejamos traduzir os termos da variável `sex` da @tbl-tabela-resumo1 para o português:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntabela_resumo %>% \n  mutate(\n    sex = recode(sex,\n                 \"female\" = \"Fêmea\",\n                 \"male\" = \"Macho\")\n  ) \n```\n:::\n\n::: {#tbl-traduzida .cell tbl-cap='Tradução da variável `sexo` da @tbl-tabela-resumo1.' tbl-pos='H'}\n::: {.cell-output-display}\n\\begin{table}\n\\centering\n\\resizebox{\\ifdim\\width>\\linewidth\\linewidth\\else\\width\\fi}{!}{\n\\begin{tabular}{llcccc}\n\\toprule\nEspécies & Sexo & Contagem & Massa média (g) & Massa Desvio-padrão (g) & Comprimento médio do bico (mm)\\\\\n\\midrule\n\\cellcolor{gray!10}{Adelie} & \\cellcolor{gray!10}{Fêmea} & \\cellcolor{gray!10}{73} & \\cellcolor{gray!10}{3368.84} & \\cellcolor{gray!10}{269.38} & \\cellcolor{gray!10}{37.26}\\\\\nAdelie & Macho & 73 & 4043.49 & 346.81 & 40.39\\\\\n\\cellcolor{gray!10}{Chinstrap} & \\cellcolor{gray!10}{Fêmea} & \\cellcolor{gray!10}{34} & \\cellcolor{gray!10}{3527.21} & \\cellcolor{gray!10}{285.33} & \\cellcolor{gray!10}{46.57}\\\\\nChinstrap & Macho & 34 & 3938.97 & 362.14 & 51.09\\\\\n\\cellcolor{gray!10}{Gentoo} & \\cellcolor{gray!10}{Fêmea} & \\cellcolor{gray!10}{58} & \\cellcolor{gray!10}{4679.74} & \\cellcolor{gray!10}{281.58} & \\cellcolor{gray!10}{45.56}\\\\\n\\addlinespace\nGentoo & Macho & 61 & 5484.84 & 313.16 & 49.47\\\\\n\\bottomrule\n\\end{tabular}}\n\\end{table}\n\n\n:::\n:::\n\n\n\n\n\n\nAs principais funções vistas do pacote `dplyr` estão resumidas e descritas na Tabela \\ref{tbl-dplyr-fcts}.\n\n\n\n\n\n::: {#tbl-dplyr-fcts .cell tbl-cap='Descrição das principais funções do \\texttt{dplyr}.'}\n::: {.cell-output-display}\n\n\\begin{longtable}[t]{ll}\n\\toprule\nFunção & Descrição\\\\\n\\midrule\n\\cellcolor{gray!10}{glimpse()} & \\cellcolor{gray!10}{Inspecionar conjuntos de dados.}\\\\\nselect() & Seleciona colunas pelo nome.\\\\\n\\cellcolor{gray!10}{filter()} & \\cellcolor{gray!10}{Filtra linhas com base em seus valores.}\\\\\narrange() & Reordena as linhas.\\\\\n\\cellcolor{gray!10}{mutate()} & \\cellcolor{gray!10}{Cria novas colunas (variáveis).}\\\\\n\\addlinespace\ngroup\\_by() & Agrupa os dados por uma ou mais variáveis.\\\\\n\\cellcolor{gray!10}{summarise()} & \\cellcolor{gray!10}{Reduz múltiplos valores a um único resumo.}\\\\\nrecode() & Renomear categorias de variáveis.\\\\\n\\bottomrule\n\\end{longtable}\n\n\n:::\n:::\n\n\n\n\n\n\n\n## A Arte da Visualização de Dados: `ggplot2`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{\"knit_meta_id\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]}},\"value\":[{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"booktabs\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"longtable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"array\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"multirow\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"wrapfig\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"float\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"colortbl\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"pdflscape\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"tabu\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttable\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"threeparttablex\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"ulem\"]},{\"type\":\"character\",\"attributes\":{},\"value\":[\"normalem\"]},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"makecell\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]},{\"type\":\"list\",\"attributes\":{\"names\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"name\",\"options\",\"extra_lines\"]},\"class\":{\"type\":\"character\",\"attributes\":{},\"value\":[\"latex_dependency\"]}},\"value\":[{\"type\":\"character\",\"attributes\":{},\"value\":[\"xcolor\"]},{\"type\":\"NULL\"},{\"type\":\"NULL\"}]}]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}